name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: |
          bun run build:web
          bun run build:cli
        env:
          NODE_ENV: production

      - name: Update package.json for publishing
        run: |
          # Save original package.json
          cp package.json package.json.orig
          # Update package.json for GitHub Packages
          jq '.name = "@parazeeknova/zephyr-forge" | .publishConfig.registry = "https://npm.pkg.github.com"' package.json > tmp.json
          mv tmp.json package.json
          # Stage the modified package.json
          git add package.json

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Commit package.json changes
          git commit -m "chore: update package.json for release [skip ci]" || true
          # Run auto shipit
          bunx auto shipit

      - name: Restore original package.json
        if: always()
        run: |
          mv package.json.orig package.json
          git add package.json
          git commit -m "chore: restore package.json after release [skip ci]" || true
          git push
