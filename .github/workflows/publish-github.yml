name: Publish to GitHub Packages

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@parazeeknova'

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Configure npm
        run: |
          echo "@parazeeknova:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> .npmrc

      - name: Update package.json for publishing
        run: |
          cp package.json package.json.orig
          # Get current version and increment patch number
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          
          # Update package.json with new version and registry
          jq --arg version "$NEW_VERSION" --arg name "@parazeeknova/zephyr-forge" \
            '.version = $version | .name = $name | .publishConfig.registry = "https://npm.pkg.github.com"' \
            package.json > tmp.json
          mv tmp.json package.json

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Restore original package.json
        if: always()
        run: |
          mv package.json.orig package.json
